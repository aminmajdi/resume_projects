// Generated by gencpp from file kortex_driver/GetControllerConfiguration.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETCONTROLLERCONFIGURATION_H
#define KORTEX_DRIVER_MESSAGE_GETCONTROLLERCONFIGURATION_H

#include <ros/service_traits.h>


#include <kortex_driver/GetControllerConfigurationRequest.h>
#include <kortex_driver/GetControllerConfigurationResponse.h>


namespace kortex_driver
{

struct GetControllerConfiguration
{

typedef GetControllerConfigurationRequest Request;
typedef GetControllerConfigurationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetControllerConfiguration
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetControllerConfiguration > {
  static const char* value()
  {
    return "486c0887673fbfba27c914b77b97b479";
  }

  static const char* value(const ::kortex_driver::GetControllerConfiguration&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetControllerConfiguration > {
  static const char* value()
  {
    return "kortex_driver/GetControllerConfiguration";
  }

  static const char* value(const ::kortex_driver::GetControllerConfiguration&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetControllerConfigurationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetControllerConfiguration >
template<>
struct MD5Sum< ::kortex_driver::GetControllerConfigurationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetControllerConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetControllerConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetControllerConfigurationRequest> should match
// service_traits::DataType< ::kortex_driver::GetControllerConfiguration >
template<>
struct DataType< ::kortex_driver::GetControllerConfigurationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetControllerConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetControllerConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetControllerConfigurationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetControllerConfiguration >
template<>
struct MD5Sum< ::kortex_driver::GetControllerConfigurationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetControllerConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetControllerConfigurationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetControllerConfigurationResponse> should match
// service_traits::DataType< ::kortex_driver::GetControllerConfiguration >
template<>
struct DataType< ::kortex_driver::GetControllerConfigurationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetControllerConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetControllerConfigurationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETCONTROLLERCONFIGURATION_H
