// Generated by gencpp from file kortex_driver/SetI2CConfiguration.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_SETI2CCONFIGURATION_H
#define KORTEX_DRIVER_MESSAGE_SETI2CCONFIGURATION_H

#include <ros/service_traits.h>


#include <kortex_driver/SetI2CConfigurationRequest.h>
#include <kortex_driver/SetI2CConfigurationResponse.h>


namespace kortex_driver
{

struct SetI2CConfiguration
{

typedef SetI2CConfigurationRequest Request;
typedef SetI2CConfigurationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetI2CConfiguration
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::SetI2CConfiguration > {
  static const char* value()
  {
    return "fcaaa1a0d5ba74e939b1b6f1a0988c2a";
  }

  static const char* value(const ::kortex_driver::SetI2CConfiguration&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::SetI2CConfiguration > {
  static const char* value()
  {
    return "kortex_driver/SetI2CConfiguration";
  }

  static const char* value(const ::kortex_driver::SetI2CConfiguration&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::SetI2CConfigurationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::SetI2CConfiguration >
template<>
struct MD5Sum< ::kortex_driver::SetI2CConfigurationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetI2CConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::SetI2CConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetI2CConfigurationRequest> should match
// service_traits::DataType< ::kortex_driver::SetI2CConfiguration >
template<>
struct DataType< ::kortex_driver::SetI2CConfigurationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetI2CConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::SetI2CConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::SetI2CConfigurationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::SetI2CConfiguration >
template<>
struct MD5Sum< ::kortex_driver::SetI2CConfigurationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetI2CConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::SetI2CConfigurationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetI2CConfigurationResponse> should match
// service_traits::DataType< ::kortex_driver::SetI2CConfiguration >
template<>
struct DataType< ::kortex_driver::SetI2CConfigurationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetI2CConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::SetI2CConfigurationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_SETI2CCONFIGURATION_H
