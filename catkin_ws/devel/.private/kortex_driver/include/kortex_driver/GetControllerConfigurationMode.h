// Generated by gencpp from file kortex_driver/GetControllerConfigurationMode.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETCONTROLLERCONFIGURATIONMODE_H
#define KORTEX_DRIVER_MESSAGE_GETCONTROLLERCONFIGURATIONMODE_H

#include <ros/service_traits.h>


#include <kortex_driver/GetControllerConfigurationModeRequest.h>
#include <kortex_driver/GetControllerConfigurationModeResponse.h>


namespace kortex_driver
{

struct GetControllerConfigurationMode
{

typedef GetControllerConfigurationModeRequest Request;
typedef GetControllerConfigurationModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetControllerConfigurationMode
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetControllerConfigurationMode > {
  static const char* value()
  {
    return "f62e2e25b47b1394acdb18945114f7ef";
  }

  static const char* value(const ::kortex_driver::GetControllerConfigurationMode&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetControllerConfigurationMode > {
  static const char* value()
  {
    return "kortex_driver/GetControllerConfigurationMode";
  }

  static const char* value(const ::kortex_driver::GetControllerConfigurationMode&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetControllerConfigurationModeRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetControllerConfigurationMode >
template<>
struct MD5Sum< ::kortex_driver::GetControllerConfigurationModeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetControllerConfigurationMode >::value();
  }
  static const char* value(const ::kortex_driver::GetControllerConfigurationModeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetControllerConfigurationModeRequest> should match
// service_traits::DataType< ::kortex_driver::GetControllerConfigurationMode >
template<>
struct DataType< ::kortex_driver::GetControllerConfigurationModeRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetControllerConfigurationMode >::value();
  }
  static const char* value(const ::kortex_driver::GetControllerConfigurationModeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetControllerConfigurationModeResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetControllerConfigurationMode >
template<>
struct MD5Sum< ::kortex_driver::GetControllerConfigurationModeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetControllerConfigurationMode >::value();
  }
  static const char* value(const ::kortex_driver::GetControllerConfigurationModeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetControllerConfigurationModeResponse> should match
// service_traits::DataType< ::kortex_driver::GetControllerConfigurationMode >
template<>
struct DataType< ::kortex_driver::GetControllerConfigurationModeResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetControllerConfigurationMode >::value();
  }
  static const char* value(const ::kortex_driver::GetControllerConfigurationModeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETCONTROLLERCONFIGURATIONMODE_H
