// Generated by gencpp from file kortex_driver/GetGravityVector.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETGRAVITYVECTOR_H
#define KORTEX_DRIVER_MESSAGE_GETGRAVITYVECTOR_H

#include <ros/service_traits.h>


#include <kortex_driver/GetGravityVectorRequest.h>
#include <kortex_driver/GetGravityVectorResponse.h>


namespace kortex_driver
{

struct GetGravityVector
{

typedef GetGravityVectorRequest Request;
typedef GetGravityVectorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetGravityVector
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetGravityVector > {
  static const char* value()
  {
    return "8956f0eb2b4baf668929f3e8781781fa";
  }

  static const char* value(const ::kortex_driver::GetGravityVector&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetGravityVector > {
  static const char* value()
  {
    return "kortex_driver/GetGravityVector";
  }

  static const char* value(const ::kortex_driver::GetGravityVector&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetGravityVectorRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetGravityVector >
template<>
struct MD5Sum< ::kortex_driver::GetGravityVectorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetGravityVector >::value();
  }
  static const char* value(const ::kortex_driver::GetGravityVectorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetGravityVectorRequest> should match
// service_traits::DataType< ::kortex_driver::GetGravityVector >
template<>
struct DataType< ::kortex_driver::GetGravityVectorRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetGravityVector >::value();
  }
  static const char* value(const ::kortex_driver::GetGravityVectorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetGravityVectorResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetGravityVector >
template<>
struct MD5Sum< ::kortex_driver::GetGravityVectorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetGravityVector >::value();
  }
  static const char* value(const ::kortex_driver::GetGravityVectorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetGravityVectorResponse> should match
// service_traits::DataType< ::kortex_driver::GetGravityVector >
template<>
struct DataType< ::kortex_driver::GetGravityVectorResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetGravityVector >::value();
  }
  static const char* value(const ::kortex_driver::GetGravityVectorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETGRAVITYVECTOR_H
