// Generated by gencpp from file kortex_driver/StopCalibration.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_STOPCALIBRATION_H
#define KORTEX_DRIVER_MESSAGE_STOPCALIBRATION_H

#include <ros/service_traits.h>


#include <kortex_driver/StopCalibrationRequest.h>
#include <kortex_driver/StopCalibrationResponse.h>


namespace kortex_driver
{

struct StopCalibration
{

typedef StopCalibrationRequest Request;
typedef StopCalibrationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct StopCalibration
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::StopCalibration > {
  static const char* value()
  {
    return "d0dfa8caa770ffbbffd12276bb3d7f2c";
  }

  static const char* value(const ::kortex_driver::StopCalibration&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::StopCalibration > {
  static const char* value()
  {
    return "kortex_driver/StopCalibration";
  }

  static const char* value(const ::kortex_driver::StopCalibration&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::StopCalibrationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::StopCalibration >
template<>
struct MD5Sum< ::kortex_driver::StopCalibrationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::StopCalibration >::value();
  }
  static const char* value(const ::kortex_driver::StopCalibrationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::StopCalibrationRequest> should match
// service_traits::DataType< ::kortex_driver::StopCalibration >
template<>
struct DataType< ::kortex_driver::StopCalibrationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::StopCalibration >::value();
  }
  static const char* value(const ::kortex_driver::StopCalibrationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::StopCalibrationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::StopCalibration >
template<>
struct MD5Sum< ::kortex_driver::StopCalibrationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::StopCalibration >::value();
  }
  static const char* value(const ::kortex_driver::StopCalibrationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::StopCalibrationResponse> should match
// service_traits::DataType< ::kortex_driver::StopCalibration >
template<>
struct DataType< ::kortex_driver::StopCalibrationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::StopCalibration >::value();
  }
  static const char* value(const ::kortex_driver::StopCalibrationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_STOPCALIBRATION_H
