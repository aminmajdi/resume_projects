// Generated by gencpp from file kortex_driver/ResetJointAccelerationSoftLimits.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_RESETJOINTACCELERATIONSOFTLIMITS_H
#define KORTEX_DRIVER_MESSAGE_RESETJOINTACCELERATIONSOFTLIMITS_H

#include <ros/service_traits.h>


#include <kortex_driver/ResetJointAccelerationSoftLimitsRequest.h>
#include <kortex_driver/ResetJointAccelerationSoftLimitsResponse.h>


namespace kortex_driver
{

struct ResetJointAccelerationSoftLimits
{

typedef ResetJointAccelerationSoftLimitsRequest Request;
typedef ResetJointAccelerationSoftLimitsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ResetJointAccelerationSoftLimits
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ResetJointAccelerationSoftLimits > {
  static const char* value()
  {
    return "6dba409e37ab85922f7777c936234d59";
  }

  static const char* value(const ::kortex_driver::ResetJointAccelerationSoftLimits&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ResetJointAccelerationSoftLimits > {
  static const char* value()
  {
    return "kortex_driver/ResetJointAccelerationSoftLimits";
  }

  static const char* value(const ::kortex_driver::ResetJointAccelerationSoftLimits&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ResetJointAccelerationSoftLimitsRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ResetJointAccelerationSoftLimits >
template<>
struct MD5Sum< ::kortex_driver::ResetJointAccelerationSoftLimitsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ResetJointAccelerationSoftLimits >::value();
  }
  static const char* value(const ::kortex_driver::ResetJointAccelerationSoftLimitsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ResetJointAccelerationSoftLimitsRequest> should match
// service_traits::DataType< ::kortex_driver::ResetJointAccelerationSoftLimits >
template<>
struct DataType< ::kortex_driver::ResetJointAccelerationSoftLimitsRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ResetJointAccelerationSoftLimits >::value();
  }
  static const char* value(const ::kortex_driver::ResetJointAccelerationSoftLimitsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ResetJointAccelerationSoftLimitsResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ResetJointAccelerationSoftLimits >
template<>
struct MD5Sum< ::kortex_driver::ResetJointAccelerationSoftLimitsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ResetJointAccelerationSoftLimits >::value();
  }
  static const char* value(const ::kortex_driver::ResetJointAccelerationSoftLimitsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ResetJointAccelerationSoftLimitsResponse> should match
// service_traits::DataType< ::kortex_driver::ResetJointAccelerationSoftLimits >
template<>
struct DataType< ::kortex_driver::ResetJointAccelerationSoftLimitsResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ResetJointAccelerationSoftLimits >::value();
  }
  static const char* value(const ::kortex_driver::ResetJointAccelerationSoftLimitsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_RESETJOINTACCELERATIONSOFTLIMITS_H
