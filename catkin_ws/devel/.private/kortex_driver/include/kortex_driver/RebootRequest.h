// Generated by gencpp from file kortex_driver/RebootRequest.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_REBOOTREQUEST_H
#define KORTEX_DRIVER_MESSAGE_REBOOTREQUEST_H

#include <ros/service_traits.h>


#include <kortex_driver/RebootRequestRequest.h>
#include <kortex_driver/RebootRequestResponse.h>


namespace kortex_driver
{

struct RebootRequest
{

typedef RebootRequestRequest Request;
typedef RebootRequestResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RebootRequest
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::RebootRequest > {
  static const char* value()
  {
    return "7587d0460f4d1dff902eaf7ca6589a94";
  }

  static const char* value(const ::kortex_driver::RebootRequest&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::RebootRequest > {
  static const char* value()
  {
    return "kortex_driver/RebootRequest";
  }

  static const char* value(const ::kortex_driver::RebootRequest&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::RebootRequestRequest> should match
// service_traits::MD5Sum< ::kortex_driver::RebootRequest >
template<>
struct MD5Sum< ::kortex_driver::RebootRequestRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::RebootRequest >::value();
  }
  static const char* value(const ::kortex_driver::RebootRequestRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::RebootRequestRequest> should match
// service_traits::DataType< ::kortex_driver::RebootRequest >
template<>
struct DataType< ::kortex_driver::RebootRequestRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::RebootRequest >::value();
  }
  static const char* value(const ::kortex_driver::RebootRequestRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::RebootRequestResponse> should match
// service_traits::MD5Sum< ::kortex_driver::RebootRequest >
template<>
struct MD5Sum< ::kortex_driver::RebootRequestResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::RebootRequest >::value();
  }
  static const char* value(const ::kortex_driver::RebootRequestResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::RebootRequestResponse> should match
// service_traits::DataType< ::kortex_driver::RebootRequest >
template<>
struct DataType< ::kortex_driver::RebootRequestResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::RebootRequest >::value();
  }
  static const char* value(const ::kortex_driver::RebootRequestResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_REBOOTREQUEST_H
