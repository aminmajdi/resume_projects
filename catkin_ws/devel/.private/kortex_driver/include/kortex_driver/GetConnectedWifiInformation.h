// Generated by gencpp from file kortex_driver/GetConnectedWifiInformation.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETCONNECTEDWIFIINFORMATION_H
#define KORTEX_DRIVER_MESSAGE_GETCONNECTEDWIFIINFORMATION_H

#include <ros/service_traits.h>


#include <kortex_driver/GetConnectedWifiInformationRequest.h>
#include <kortex_driver/GetConnectedWifiInformationResponse.h>


namespace kortex_driver
{

struct GetConnectedWifiInformation
{

typedef GetConnectedWifiInformationRequest Request;
typedef GetConnectedWifiInformationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetConnectedWifiInformation
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetConnectedWifiInformation > {
  static const char* value()
  {
    return "38ff400e5249598bc1f7289a3e9733aa";
  }

  static const char* value(const ::kortex_driver::GetConnectedWifiInformation&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetConnectedWifiInformation > {
  static const char* value()
  {
    return "kortex_driver/GetConnectedWifiInformation";
  }

  static const char* value(const ::kortex_driver::GetConnectedWifiInformation&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetConnectedWifiInformationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetConnectedWifiInformation >
template<>
struct MD5Sum< ::kortex_driver::GetConnectedWifiInformationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetConnectedWifiInformation >::value();
  }
  static const char* value(const ::kortex_driver::GetConnectedWifiInformationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetConnectedWifiInformationRequest> should match
// service_traits::DataType< ::kortex_driver::GetConnectedWifiInformation >
template<>
struct DataType< ::kortex_driver::GetConnectedWifiInformationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetConnectedWifiInformation >::value();
  }
  static const char* value(const ::kortex_driver::GetConnectedWifiInformationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetConnectedWifiInformationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetConnectedWifiInformation >
template<>
struct MD5Sum< ::kortex_driver::GetConnectedWifiInformationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetConnectedWifiInformation >::value();
  }
  static const char* value(const ::kortex_driver::GetConnectedWifiInformationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetConnectedWifiInformationResponse> should match
// service_traits::DataType< ::kortex_driver::GetConnectedWifiInformation >
template<>
struct DataType< ::kortex_driver::GetConnectedWifiInformationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetConnectedWifiInformation >::value();
  }
  static const char* value(const ::kortex_driver::GetConnectedWifiInformationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETCONNECTEDWIFIINFORMATION_H
