// Generated by gencpp from file kortex_driver/ReadMap.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_READMAP_H
#define KORTEX_DRIVER_MESSAGE_READMAP_H

#include <ros/service_traits.h>


#include <kortex_driver/ReadMapRequest.h>
#include <kortex_driver/ReadMapResponse.h>


namespace kortex_driver
{

struct ReadMap
{

typedef ReadMapRequest Request;
typedef ReadMapResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReadMap
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ReadMap > {
  static const char* value()
  {
    return "e2575a148b01eb62ec15264409730bd7";
  }

  static const char* value(const ::kortex_driver::ReadMap&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ReadMap > {
  static const char* value()
  {
    return "kortex_driver/ReadMap";
  }

  static const char* value(const ::kortex_driver::ReadMap&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ReadMapRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ReadMap >
template<>
struct MD5Sum< ::kortex_driver::ReadMapRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadMap >::value();
  }
  static const char* value(const ::kortex_driver::ReadMapRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadMapRequest> should match
// service_traits::DataType< ::kortex_driver::ReadMap >
template<>
struct DataType< ::kortex_driver::ReadMapRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadMap >::value();
  }
  static const char* value(const ::kortex_driver::ReadMapRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ReadMapResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ReadMap >
template<>
struct MD5Sum< ::kortex_driver::ReadMapResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadMap >::value();
  }
  static const char* value(const ::kortex_driver::ReadMapResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadMapResponse> should match
// service_traits::DataType< ::kortex_driver::ReadMap >
template<>
struct DataType< ::kortex_driver::ReadMapResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadMap >::value();
  }
  static const char* value(const ::kortex_driver::ReadMapResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_READMAP_H
