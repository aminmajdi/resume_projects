// Generated by gencpp from file kortex_driver/PlayJointTrajectory.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_PLAYJOINTTRAJECTORY_H
#define KORTEX_DRIVER_MESSAGE_PLAYJOINTTRAJECTORY_H

#include <ros/service_traits.h>


#include <kortex_driver/PlayJointTrajectoryRequest.h>
#include <kortex_driver/PlayJointTrajectoryResponse.h>


namespace kortex_driver
{

struct PlayJointTrajectory
{

typedef PlayJointTrajectoryRequest Request;
typedef PlayJointTrajectoryResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PlayJointTrajectory
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::PlayJointTrajectory > {
  static const char* value()
  {
    return "f04458839c6d778db05eb68c1fd72ac4";
  }

  static const char* value(const ::kortex_driver::PlayJointTrajectory&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::PlayJointTrajectory > {
  static const char* value()
  {
    return "kortex_driver/PlayJointTrajectory";
  }

  static const char* value(const ::kortex_driver::PlayJointTrajectory&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::PlayJointTrajectoryRequest> should match
// service_traits::MD5Sum< ::kortex_driver::PlayJointTrajectory >
template<>
struct MD5Sum< ::kortex_driver::PlayJointTrajectoryRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::PlayJointTrajectory >::value();
  }
  static const char* value(const ::kortex_driver::PlayJointTrajectoryRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::PlayJointTrajectoryRequest> should match
// service_traits::DataType< ::kortex_driver::PlayJointTrajectory >
template<>
struct DataType< ::kortex_driver::PlayJointTrajectoryRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::PlayJointTrajectory >::value();
  }
  static const char* value(const ::kortex_driver::PlayJointTrajectoryRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::PlayJointTrajectoryResponse> should match
// service_traits::MD5Sum< ::kortex_driver::PlayJointTrajectory >
template<>
struct MD5Sum< ::kortex_driver::PlayJointTrajectoryResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::PlayJointTrajectory >::value();
  }
  static const char* value(const ::kortex_driver::PlayJointTrajectoryResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::PlayJointTrajectoryResponse> should match
// service_traits::DataType< ::kortex_driver::PlayJointTrajectory >
template<>
struct DataType< ::kortex_driver::PlayJointTrajectoryResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::PlayJointTrajectory >::value();
  }
  static const char* value(const ::kortex_driver::PlayJointTrajectoryResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_PLAYJOINTTRAJECTORY_H
