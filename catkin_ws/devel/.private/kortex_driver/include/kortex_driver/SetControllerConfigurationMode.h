// Generated by gencpp from file kortex_driver/SetControllerConfigurationMode.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_SETCONTROLLERCONFIGURATIONMODE_H
#define KORTEX_DRIVER_MESSAGE_SETCONTROLLERCONFIGURATIONMODE_H

#include <ros/service_traits.h>


#include <kortex_driver/SetControllerConfigurationModeRequest.h>
#include <kortex_driver/SetControllerConfigurationModeResponse.h>


namespace kortex_driver
{

struct SetControllerConfigurationMode
{

typedef SetControllerConfigurationModeRequest Request;
typedef SetControllerConfigurationModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetControllerConfigurationMode
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::SetControllerConfigurationMode > {
  static const char* value()
  {
    return "a1e10ce64919ae3ba0f5b2193b693ecb";
  }

  static const char* value(const ::kortex_driver::SetControllerConfigurationMode&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::SetControllerConfigurationMode > {
  static const char* value()
  {
    return "kortex_driver/SetControllerConfigurationMode";
  }

  static const char* value(const ::kortex_driver::SetControllerConfigurationMode&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::SetControllerConfigurationModeRequest> should match
// service_traits::MD5Sum< ::kortex_driver::SetControllerConfigurationMode >
template<>
struct MD5Sum< ::kortex_driver::SetControllerConfigurationModeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetControllerConfigurationMode >::value();
  }
  static const char* value(const ::kortex_driver::SetControllerConfigurationModeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetControllerConfigurationModeRequest> should match
// service_traits::DataType< ::kortex_driver::SetControllerConfigurationMode >
template<>
struct DataType< ::kortex_driver::SetControllerConfigurationModeRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetControllerConfigurationMode >::value();
  }
  static const char* value(const ::kortex_driver::SetControllerConfigurationModeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::SetControllerConfigurationModeResponse> should match
// service_traits::MD5Sum< ::kortex_driver::SetControllerConfigurationMode >
template<>
struct MD5Sum< ::kortex_driver::SetControllerConfigurationModeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetControllerConfigurationMode >::value();
  }
  static const char* value(const ::kortex_driver::SetControllerConfigurationModeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetControllerConfigurationModeResponse> should match
// service_traits::DataType< ::kortex_driver::SetControllerConfigurationMode >
template<>
struct DataType< ::kortex_driver::SetControllerConfigurationModeResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetControllerConfigurationMode >::value();
  }
  static const char* value(const ::kortex_driver::SetControllerConfigurationModeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_SETCONTROLLERCONFIGURATIONMODE_H
