// Generated by gencpp from file kortex_driver/GetWifiCountryCode.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETWIFICOUNTRYCODE_H
#define KORTEX_DRIVER_MESSAGE_GETWIFICOUNTRYCODE_H

#include <ros/service_traits.h>


#include <kortex_driver/GetWifiCountryCodeRequest.h>
#include <kortex_driver/GetWifiCountryCodeResponse.h>


namespace kortex_driver
{

struct GetWifiCountryCode
{

typedef GetWifiCountryCodeRequest Request;
typedef GetWifiCountryCodeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetWifiCountryCode
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetWifiCountryCode > {
  static const char* value()
  {
    return "e29a445c35ddd6d1bc1a1daa766b9db1";
  }

  static const char* value(const ::kortex_driver::GetWifiCountryCode&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetWifiCountryCode > {
  static const char* value()
  {
    return "kortex_driver/GetWifiCountryCode";
  }

  static const char* value(const ::kortex_driver::GetWifiCountryCode&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetWifiCountryCodeRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetWifiCountryCode >
template<>
struct MD5Sum< ::kortex_driver::GetWifiCountryCodeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetWifiCountryCode >::value();
  }
  static const char* value(const ::kortex_driver::GetWifiCountryCodeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetWifiCountryCodeRequest> should match
// service_traits::DataType< ::kortex_driver::GetWifiCountryCode >
template<>
struct DataType< ::kortex_driver::GetWifiCountryCodeRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetWifiCountryCode >::value();
  }
  static const char* value(const ::kortex_driver::GetWifiCountryCodeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetWifiCountryCodeResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetWifiCountryCode >
template<>
struct MD5Sum< ::kortex_driver::GetWifiCountryCodeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetWifiCountryCode >::value();
  }
  static const char* value(const ::kortex_driver::GetWifiCountryCodeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetWifiCountryCodeResponse> should match
// service_traits::DataType< ::kortex_driver::GetWifiCountryCode >
template<>
struct DataType< ::kortex_driver::GetWifiCountryCodeResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetWifiCountryCode >::value();
  }
  static const char* value(const ::kortex_driver::GetWifiCountryCodeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETWIFICOUNTRYCODE_H
