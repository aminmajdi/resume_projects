// Generated by gencpp from file kortex_driver/DeviceConfig_GetCapSenseConfig.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_DEVICECONFIG_GETCAPSENSECONFIG_H
#define KORTEX_DRIVER_MESSAGE_DEVICECONFIG_GETCAPSENSECONFIG_H

#include <ros/service_traits.h>


#include <kortex_driver/DeviceConfig_GetCapSenseConfigRequest.h>
#include <kortex_driver/DeviceConfig_GetCapSenseConfigResponse.h>


namespace kortex_driver
{

struct DeviceConfig_GetCapSenseConfig
{

typedef DeviceConfig_GetCapSenseConfigRequest Request;
typedef DeviceConfig_GetCapSenseConfigResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct DeviceConfig_GetCapSenseConfig
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::DeviceConfig_GetCapSenseConfig > {
  static const char* value()
  {
    return "067bae44ab43b02bd4decf501211ef0c";
  }

  static const char* value(const ::kortex_driver::DeviceConfig_GetCapSenseConfig&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::DeviceConfig_GetCapSenseConfig > {
  static const char* value()
  {
    return "kortex_driver/DeviceConfig_GetCapSenseConfig";
  }

  static const char* value(const ::kortex_driver::DeviceConfig_GetCapSenseConfig&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::DeviceConfig_GetCapSenseConfigRequest> should match
// service_traits::MD5Sum< ::kortex_driver::DeviceConfig_GetCapSenseConfig >
template<>
struct MD5Sum< ::kortex_driver::DeviceConfig_GetCapSenseConfigRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::DeviceConfig_GetCapSenseConfig >::value();
  }
  static const char* value(const ::kortex_driver::DeviceConfig_GetCapSenseConfigRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::DeviceConfig_GetCapSenseConfigRequest> should match
// service_traits::DataType< ::kortex_driver::DeviceConfig_GetCapSenseConfig >
template<>
struct DataType< ::kortex_driver::DeviceConfig_GetCapSenseConfigRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::DeviceConfig_GetCapSenseConfig >::value();
  }
  static const char* value(const ::kortex_driver::DeviceConfig_GetCapSenseConfigRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::DeviceConfig_GetCapSenseConfigResponse> should match
// service_traits::MD5Sum< ::kortex_driver::DeviceConfig_GetCapSenseConfig >
template<>
struct MD5Sum< ::kortex_driver::DeviceConfig_GetCapSenseConfigResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::DeviceConfig_GetCapSenseConfig >::value();
  }
  static const char* value(const ::kortex_driver::DeviceConfig_GetCapSenseConfigResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::DeviceConfig_GetCapSenseConfigResponse> should match
// service_traits::DataType< ::kortex_driver::DeviceConfig_GetCapSenseConfig >
template<>
struct DataType< ::kortex_driver::DeviceConfig_GetCapSenseConfigResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::DeviceConfig_GetCapSenseConfig >::value();
  }
  static const char* value(const ::kortex_driver::DeviceConfig_GetCapSenseConfigResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_DEVICECONFIG_GETCAPSENSECONFIG_H
