// Generated by gencpp from file kortex_driver/GetBridgeConfig.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETBRIDGECONFIG_H
#define KORTEX_DRIVER_MESSAGE_GETBRIDGECONFIG_H

#include <ros/service_traits.h>


#include <kortex_driver/GetBridgeConfigRequest.h>
#include <kortex_driver/GetBridgeConfigResponse.h>


namespace kortex_driver
{

struct GetBridgeConfig
{

typedef GetBridgeConfigRequest Request;
typedef GetBridgeConfigResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetBridgeConfig
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetBridgeConfig > {
  static const char* value()
  {
    return "9f7aa46e9ca64f4d1fa2fe2894e0afa6";
  }

  static const char* value(const ::kortex_driver::GetBridgeConfig&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetBridgeConfig > {
  static const char* value()
  {
    return "kortex_driver/GetBridgeConfig";
  }

  static const char* value(const ::kortex_driver::GetBridgeConfig&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetBridgeConfigRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetBridgeConfig >
template<>
struct MD5Sum< ::kortex_driver::GetBridgeConfigRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetBridgeConfig >::value();
  }
  static const char* value(const ::kortex_driver::GetBridgeConfigRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetBridgeConfigRequest> should match
// service_traits::DataType< ::kortex_driver::GetBridgeConfig >
template<>
struct DataType< ::kortex_driver::GetBridgeConfigRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetBridgeConfig >::value();
  }
  static const char* value(const ::kortex_driver::GetBridgeConfigRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetBridgeConfigResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetBridgeConfig >
template<>
struct MD5Sum< ::kortex_driver::GetBridgeConfigResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetBridgeConfig >::value();
  }
  static const char* value(const ::kortex_driver::GetBridgeConfigResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetBridgeConfigResponse> should match
// service_traits::DataType< ::kortex_driver::GetBridgeConfig >
template<>
struct DataType< ::kortex_driver::GetBridgeConfigResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetBridgeConfig >::value();
  }
  static const char* value(const ::kortex_driver::GetBridgeConfigResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETBRIDGECONFIG_H
