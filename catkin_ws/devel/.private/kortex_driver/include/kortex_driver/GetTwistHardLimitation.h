// Generated by gencpp from file kortex_driver/GetTwistHardLimitation.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETTWISTHARDLIMITATION_H
#define KORTEX_DRIVER_MESSAGE_GETTWISTHARDLIMITATION_H

#include <ros/service_traits.h>


#include <kortex_driver/GetTwistHardLimitationRequest.h>
#include <kortex_driver/GetTwistHardLimitationResponse.h>


namespace kortex_driver
{

struct GetTwistHardLimitation
{

typedef GetTwistHardLimitationRequest Request;
typedef GetTwistHardLimitationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetTwistHardLimitation
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetTwistHardLimitation > {
  static const char* value()
  {
    return "69b1f43d97a46e21f8b8586022fd23ec";
  }

  static const char* value(const ::kortex_driver::GetTwistHardLimitation&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetTwistHardLimitation > {
  static const char* value()
  {
    return "kortex_driver/GetTwistHardLimitation";
  }

  static const char* value(const ::kortex_driver::GetTwistHardLimitation&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetTwistHardLimitationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetTwistHardLimitation >
template<>
struct MD5Sum< ::kortex_driver::GetTwistHardLimitationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetTwistHardLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetTwistHardLimitationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetTwistHardLimitationRequest> should match
// service_traits::DataType< ::kortex_driver::GetTwistHardLimitation >
template<>
struct DataType< ::kortex_driver::GetTwistHardLimitationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetTwistHardLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetTwistHardLimitationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetTwistHardLimitationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetTwistHardLimitation >
template<>
struct MD5Sum< ::kortex_driver::GetTwistHardLimitationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetTwistHardLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetTwistHardLimitationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetTwistHardLimitationResponse> should match
// service_traits::DataType< ::kortex_driver::GetTwistHardLimitation >
template<>
struct DataType< ::kortex_driver::GetTwistHardLimitationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetTwistHardLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetTwistHardLimitationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETTWISTHARDLIMITATION_H
