// Generated by gencpp from file kortex_driver/GetAllJointsSpeedSoftLimitation.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETALLJOINTSSPEEDSOFTLIMITATION_H
#define KORTEX_DRIVER_MESSAGE_GETALLJOINTSSPEEDSOFTLIMITATION_H

#include <ros/service_traits.h>


#include <kortex_driver/GetAllJointsSpeedSoftLimitationRequest.h>
#include <kortex_driver/GetAllJointsSpeedSoftLimitationResponse.h>


namespace kortex_driver
{

struct GetAllJointsSpeedSoftLimitation
{

typedef GetAllJointsSpeedSoftLimitationRequest Request;
typedef GetAllJointsSpeedSoftLimitationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetAllJointsSpeedSoftLimitation
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetAllJointsSpeedSoftLimitation > {
  static const char* value()
  {
    return "80ab5247f79a646a096a6bb5bc451a7d";
  }

  static const char* value(const ::kortex_driver::GetAllJointsSpeedSoftLimitation&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetAllJointsSpeedSoftLimitation > {
  static const char* value()
  {
    return "kortex_driver/GetAllJointsSpeedSoftLimitation";
  }

  static const char* value(const ::kortex_driver::GetAllJointsSpeedSoftLimitation&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetAllJointsSpeedSoftLimitationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetAllJointsSpeedSoftLimitation >
template<>
struct MD5Sum< ::kortex_driver::GetAllJointsSpeedSoftLimitationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetAllJointsSpeedSoftLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetAllJointsSpeedSoftLimitationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetAllJointsSpeedSoftLimitationRequest> should match
// service_traits::DataType< ::kortex_driver::GetAllJointsSpeedSoftLimitation >
template<>
struct DataType< ::kortex_driver::GetAllJointsSpeedSoftLimitationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetAllJointsSpeedSoftLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetAllJointsSpeedSoftLimitationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetAllJointsSpeedSoftLimitationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetAllJointsSpeedSoftLimitation >
template<>
struct MD5Sum< ::kortex_driver::GetAllJointsSpeedSoftLimitationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetAllJointsSpeedSoftLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetAllJointsSpeedSoftLimitationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetAllJointsSpeedSoftLimitationResponse> should match
// service_traits::DataType< ::kortex_driver::GetAllJointsSpeedSoftLimitation >
template<>
struct DataType< ::kortex_driver::GetAllJointsSpeedSoftLimitationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetAllJointsSpeedSoftLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetAllJointsSpeedSoftLimitationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETALLJOINTSSPEEDSOFTLIMITATION_H
