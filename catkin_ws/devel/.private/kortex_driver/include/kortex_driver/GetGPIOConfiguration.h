// Generated by gencpp from file kortex_driver/GetGPIOConfiguration.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETGPIOCONFIGURATION_H
#define KORTEX_DRIVER_MESSAGE_GETGPIOCONFIGURATION_H

#include <ros/service_traits.h>


#include <kortex_driver/GetGPIOConfigurationRequest.h>
#include <kortex_driver/GetGPIOConfigurationResponse.h>


namespace kortex_driver
{

struct GetGPIOConfiguration
{

typedef GetGPIOConfigurationRequest Request;
typedef GetGPIOConfigurationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetGPIOConfiguration
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetGPIOConfiguration > {
  static const char* value()
  {
    return "54322e7ee9a9cb34b1b8f34c41c5ae4d";
  }

  static const char* value(const ::kortex_driver::GetGPIOConfiguration&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetGPIOConfiguration > {
  static const char* value()
  {
    return "kortex_driver/GetGPIOConfiguration";
  }

  static const char* value(const ::kortex_driver::GetGPIOConfiguration&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetGPIOConfigurationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetGPIOConfiguration >
template<>
struct MD5Sum< ::kortex_driver::GetGPIOConfigurationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetGPIOConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetGPIOConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetGPIOConfigurationRequest> should match
// service_traits::DataType< ::kortex_driver::GetGPIOConfiguration >
template<>
struct DataType< ::kortex_driver::GetGPIOConfigurationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetGPIOConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetGPIOConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetGPIOConfigurationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetGPIOConfiguration >
template<>
struct MD5Sum< ::kortex_driver::GetGPIOConfigurationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetGPIOConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetGPIOConfigurationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetGPIOConfigurationResponse> should match
// service_traits::DataType< ::kortex_driver::GetGPIOConfiguration >
template<>
struct DataType< ::kortex_driver::GetGPIOConfigurationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetGPIOConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetGPIOConfigurationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETGPIOCONFIGURATION_H
