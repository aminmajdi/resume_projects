// Generated by gencpp from file kortex_driver/AddWifiConfiguration.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_ADDWIFICONFIGURATION_H
#define KORTEX_DRIVER_MESSAGE_ADDWIFICONFIGURATION_H

#include <ros/service_traits.h>


#include <kortex_driver/AddWifiConfigurationRequest.h>
#include <kortex_driver/AddWifiConfigurationResponse.h>


namespace kortex_driver
{

struct AddWifiConfiguration
{

typedef AddWifiConfigurationRequest Request;
typedef AddWifiConfigurationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AddWifiConfiguration
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::AddWifiConfiguration > {
  static const char* value()
  {
    return "2cc46423b77629bdba4927dbabe3a2cb";
  }

  static const char* value(const ::kortex_driver::AddWifiConfiguration&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::AddWifiConfiguration > {
  static const char* value()
  {
    return "kortex_driver/AddWifiConfiguration";
  }

  static const char* value(const ::kortex_driver::AddWifiConfiguration&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::AddWifiConfigurationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::AddWifiConfiguration >
template<>
struct MD5Sum< ::kortex_driver::AddWifiConfigurationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::AddWifiConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::AddWifiConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::AddWifiConfigurationRequest> should match
// service_traits::DataType< ::kortex_driver::AddWifiConfiguration >
template<>
struct DataType< ::kortex_driver::AddWifiConfigurationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::AddWifiConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::AddWifiConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::AddWifiConfigurationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::AddWifiConfiguration >
template<>
struct MD5Sum< ::kortex_driver::AddWifiConfigurationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::AddWifiConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::AddWifiConfigurationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::AddWifiConfigurationResponse> should match
// service_traits::DataType< ::kortex_driver::AddWifiConfiguration >
template<>
struct DataType< ::kortex_driver::AddWifiConfigurationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::AddWifiConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::AddWifiConfigurationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_ADDWIFICONFIGURATION_H
