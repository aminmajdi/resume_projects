// Generated by gencpp from file kortex_driver/UpdateSequenceTask.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_UPDATESEQUENCETASK_H
#define KORTEX_DRIVER_MESSAGE_UPDATESEQUENCETASK_H

#include <ros/service_traits.h>


#include <kortex_driver/UpdateSequenceTaskRequest.h>
#include <kortex_driver/UpdateSequenceTaskResponse.h>


namespace kortex_driver
{

struct UpdateSequenceTask
{

typedef UpdateSequenceTaskRequest Request;
typedef UpdateSequenceTaskResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct UpdateSequenceTask
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::UpdateSequenceTask > {
  static const char* value()
  {
    return "e60d52341c6de4d2d89b4efd7e6f5ad1";
  }

  static const char* value(const ::kortex_driver::UpdateSequenceTask&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::UpdateSequenceTask > {
  static const char* value()
  {
    return "kortex_driver/UpdateSequenceTask";
  }

  static const char* value(const ::kortex_driver::UpdateSequenceTask&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::UpdateSequenceTaskRequest> should match
// service_traits::MD5Sum< ::kortex_driver::UpdateSequenceTask >
template<>
struct MD5Sum< ::kortex_driver::UpdateSequenceTaskRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::UpdateSequenceTask >::value();
  }
  static const char* value(const ::kortex_driver::UpdateSequenceTaskRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::UpdateSequenceTaskRequest> should match
// service_traits::DataType< ::kortex_driver::UpdateSequenceTask >
template<>
struct DataType< ::kortex_driver::UpdateSequenceTaskRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::UpdateSequenceTask >::value();
  }
  static const char* value(const ::kortex_driver::UpdateSequenceTaskRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::UpdateSequenceTaskResponse> should match
// service_traits::MD5Sum< ::kortex_driver::UpdateSequenceTask >
template<>
struct MD5Sum< ::kortex_driver::UpdateSequenceTaskResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::UpdateSequenceTask >::value();
  }
  static const char* value(const ::kortex_driver::UpdateSequenceTaskResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::UpdateSequenceTaskResponse> should match
// service_traits::DataType< ::kortex_driver::UpdateSequenceTask >
template<>
struct DataType< ::kortex_driver::UpdateSequenceTaskResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::UpdateSequenceTask >::value();
  }
  static const char* value(const ::kortex_driver::UpdateSequenceTaskResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_UPDATESEQUENCETASK_H
