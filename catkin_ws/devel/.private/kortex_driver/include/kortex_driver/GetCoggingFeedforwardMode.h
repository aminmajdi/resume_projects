// Generated by gencpp from file kortex_driver/GetCoggingFeedforwardMode.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETCOGGINGFEEDFORWARDMODE_H
#define KORTEX_DRIVER_MESSAGE_GETCOGGINGFEEDFORWARDMODE_H

#include <ros/service_traits.h>


#include <kortex_driver/GetCoggingFeedforwardModeRequest.h>
#include <kortex_driver/GetCoggingFeedforwardModeResponse.h>


namespace kortex_driver
{

struct GetCoggingFeedforwardMode
{

typedef GetCoggingFeedforwardModeRequest Request;
typedef GetCoggingFeedforwardModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetCoggingFeedforwardMode
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetCoggingFeedforwardMode > {
  static const char* value()
  {
    return "54f13ab10b17b140d71d14c7e922bc7e";
  }

  static const char* value(const ::kortex_driver::GetCoggingFeedforwardMode&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetCoggingFeedforwardMode > {
  static const char* value()
  {
    return "kortex_driver/GetCoggingFeedforwardMode";
  }

  static const char* value(const ::kortex_driver::GetCoggingFeedforwardMode&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetCoggingFeedforwardModeRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetCoggingFeedforwardMode >
template<>
struct MD5Sum< ::kortex_driver::GetCoggingFeedforwardModeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetCoggingFeedforwardMode >::value();
  }
  static const char* value(const ::kortex_driver::GetCoggingFeedforwardModeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetCoggingFeedforwardModeRequest> should match
// service_traits::DataType< ::kortex_driver::GetCoggingFeedforwardMode >
template<>
struct DataType< ::kortex_driver::GetCoggingFeedforwardModeRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetCoggingFeedforwardMode >::value();
  }
  static const char* value(const ::kortex_driver::GetCoggingFeedforwardModeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetCoggingFeedforwardModeResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetCoggingFeedforwardMode >
template<>
struct MD5Sum< ::kortex_driver::GetCoggingFeedforwardModeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetCoggingFeedforwardMode >::value();
  }
  static const char* value(const ::kortex_driver::GetCoggingFeedforwardModeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetCoggingFeedforwardModeResponse> should match
// service_traits::DataType< ::kortex_driver::GetCoggingFeedforwardMode >
template<>
struct DataType< ::kortex_driver::GetCoggingFeedforwardModeResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetCoggingFeedforwardMode >::value();
  }
  static const char* value(const ::kortex_driver::GetCoggingFeedforwardModeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETCOGGINGFEEDFORWARDMODE_H
