// Generated by gencpp from file kortex_driver/SendGripperCommand.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_SENDGRIPPERCOMMAND_H
#define KORTEX_DRIVER_MESSAGE_SENDGRIPPERCOMMAND_H

#include <ros/service_traits.h>


#include <kortex_driver/SendGripperCommandRequest.h>
#include <kortex_driver/SendGripperCommandResponse.h>


namespace kortex_driver
{

struct SendGripperCommand
{

typedef SendGripperCommandRequest Request;
typedef SendGripperCommandResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SendGripperCommand
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::SendGripperCommand > {
  static const char* value()
  {
    return "d750c71a9686ff834d5687f20aaad330";
  }

  static const char* value(const ::kortex_driver::SendGripperCommand&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::SendGripperCommand > {
  static const char* value()
  {
    return "kortex_driver/SendGripperCommand";
  }

  static const char* value(const ::kortex_driver::SendGripperCommand&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::SendGripperCommandRequest> should match
// service_traits::MD5Sum< ::kortex_driver::SendGripperCommand >
template<>
struct MD5Sum< ::kortex_driver::SendGripperCommandRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SendGripperCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendGripperCommandRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SendGripperCommandRequest> should match
// service_traits::DataType< ::kortex_driver::SendGripperCommand >
template<>
struct DataType< ::kortex_driver::SendGripperCommandRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SendGripperCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendGripperCommandRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::SendGripperCommandResponse> should match
// service_traits::MD5Sum< ::kortex_driver::SendGripperCommand >
template<>
struct MD5Sum< ::kortex_driver::SendGripperCommandResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SendGripperCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendGripperCommandResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SendGripperCommandResponse> should match
// service_traits::DataType< ::kortex_driver::SendGripperCommand >
template<>
struct DataType< ::kortex_driver::SendGripperCommandResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SendGripperCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendGripperCommandResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_SENDGRIPPERCOMMAND_H
