// Generated by gencpp from file kortex_driver/OnNotificationFactoryTopic.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_ONNOTIFICATIONFACTORYTOPIC_H
#define KORTEX_DRIVER_MESSAGE_ONNOTIFICATIONFACTORYTOPIC_H

#include <ros/service_traits.h>


#include <kortex_driver/OnNotificationFactoryTopicRequest.h>
#include <kortex_driver/OnNotificationFactoryTopicResponse.h>


namespace kortex_driver
{

struct OnNotificationFactoryTopic
{

typedef OnNotificationFactoryTopicRequest Request;
typedef OnNotificationFactoryTopicResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct OnNotificationFactoryTopic
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::OnNotificationFactoryTopic > {
  static const char* value()
  {
    return "6fefdd07c6cb63a94f7b48e7e07e815b";
  }

  static const char* value(const ::kortex_driver::OnNotificationFactoryTopic&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::OnNotificationFactoryTopic > {
  static const char* value()
  {
    return "kortex_driver/OnNotificationFactoryTopic";
  }

  static const char* value(const ::kortex_driver::OnNotificationFactoryTopic&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::OnNotificationFactoryTopicRequest> should match
// service_traits::MD5Sum< ::kortex_driver::OnNotificationFactoryTopic >
template<>
struct MD5Sum< ::kortex_driver::OnNotificationFactoryTopicRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::OnNotificationFactoryTopic >::value();
  }
  static const char* value(const ::kortex_driver::OnNotificationFactoryTopicRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::OnNotificationFactoryTopicRequest> should match
// service_traits::DataType< ::kortex_driver::OnNotificationFactoryTopic >
template<>
struct DataType< ::kortex_driver::OnNotificationFactoryTopicRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::OnNotificationFactoryTopic >::value();
  }
  static const char* value(const ::kortex_driver::OnNotificationFactoryTopicRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::OnNotificationFactoryTopicResponse> should match
// service_traits::MD5Sum< ::kortex_driver::OnNotificationFactoryTopic >
template<>
struct MD5Sum< ::kortex_driver::OnNotificationFactoryTopicResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::OnNotificationFactoryTopic >::value();
  }
  static const char* value(const ::kortex_driver::OnNotificationFactoryTopicResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::OnNotificationFactoryTopicResponse> should match
// service_traits::DataType< ::kortex_driver::OnNotificationFactoryTopic >
template<>
struct DataType< ::kortex_driver::OnNotificationFactoryTopicResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::OnNotificationFactoryTopic >::value();
  }
  static const char* value(const ::kortex_driver::OnNotificationFactoryTopicResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_ONNOTIFICATIONFACTORYTOPIC_H
