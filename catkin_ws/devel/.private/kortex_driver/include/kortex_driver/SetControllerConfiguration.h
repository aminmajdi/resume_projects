// Generated by gencpp from file kortex_driver/SetControllerConfiguration.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_SETCONTROLLERCONFIGURATION_H
#define KORTEX_DRIVER_MESSAGE_SETCONTROLLERCONFIGURATION_H

#include <ros/service_traits.h>


#include <kortex_driver/SetControllerConfigurationRequest.h>
#include <kortex_driver/SetControllerConfigurationResponse.h>


namespace kortex_driver
{

struct SetControllerConfiguration
{

typedef SetControllerConfigurationRequest Request;
typedef SetControllerConfigurationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetControllerConfiguration
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::SetControllerConfiguration > {
  static const char* value()
  {
    return "4158c0b1ce15d5824908b5157fccd994";
  }

  static const char* value(const ::kortex_driver::SetControllerConfiguration&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::SetControllerConfiguration > {
  static const char* value()
  {
    return "kortex_driver/SetControllerConfiguration";
  }

  static const char* value(const ::kortex_driver::SetControllerConfiguration&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::SetControllerConfigurationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::SetControllerConfiguration >
template<>
struct MD5Sum< ::kortex_driver::SetControllerConfigurationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetControllerConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::SetControllerConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetControllerConfigurationRequest> should match
// service_traits::DataType< ::kortex_driver::SetControllerConfiguration >
template<>
struct DataType< ::kortex_driver::SetControllerConfigurationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetControllerConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::SetControllerConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::SetControllerConfigurationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::SetControllerConfiguration >
template<>
struct MD5Sum< ::kortex_driver::SetControllerConfigurationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetControllerConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::SetControllerConfigurationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetControllerConfigurationResponse> should match
// service_traits::DataType< ::kortex_driver::SetControllerConfiguration >
template<>
struct DataType< ::kortex_driver::SetControllerConfigurationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetControllerConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::SetControllerConfigurationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_SETCONTROLLERCONFIGURATION_H
