// Generated by gencpp from file kortex_driver/GetAllControllerConfigurations.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETALLCONTROLLERCONFIGURATIONS_H
#define KORTEX_DRIVER_MESSAGE_GETALLCONTROLLERCONFIGURATIONS_H

#include <ros/service_traits.h>


#include <kortex_driver/GetAllControllerConfigurationsRequest.h>
#include <kortex_driver/GetAllControllerConfigurationsResponse.h>


namespace kortex_driver
{

struct GetAllControllerConfigurations
{

typedef GetAllControllerConfigurationsRequest Request;
typedef GetAllControllerConfigurationsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetAllControllerConfigurations
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetAllControllerConfigurations > {
  static const char* value()
  {
    return "48bc932dac09542b910dbdc1482df5ca";
  }

  static const char* value(const ::kortex_driver::GetAllControllerConfigurations&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetAllControllerConfigurations > {
  static const char* value()
  {
    return "kortex_driver/GetAllControllerConfigurations";
  }

  static const char* value(const ::kortex_driver::GetAllControllerConfigurations&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetAllControllerConfigurationsRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetAllControllerConfigurations >
template<>
struct MD5Sum< ::kortex_driver::GetAllControllerConfigurationsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetAllControllerConfigurations >::value();
  }
  static const char* value(const ::kortex_driver::GetAllControllerConfigurationsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetAllControllerConfigurationsRequest> should match
// service_traits::DataType< ::kortex_driver::GetAllControllerConfigurations >
template<>
struct DataType< ::kortex_driver::GetAllControllerConfigurationsRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetAllControllerConfigurations >::value();
  }
  static const char* value(const ::kortex_driver::GetAllControllerConfigurationsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetAllControllerConfigurationsResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetAllControllerConfigurations >
template<>
struct MD5Sum< ::kortex_driver::GetAllControllerConfigurationsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetAllControllerConfigurations >::value();
  }
  static const char* value(const ::kortex_driver::GetAllControllerConfigurationsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetAllControllerConfigurationsResponse> should match
// service_traits::DataType< ::kortex_driver::GetAllControllerConfigurations >
template<>
struct DataType< ::kortex_driver::GetAllControllerConfigurationsResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetAllControllerConfigurations >::value();
  }
  static const char* value(const ::kortex_driver::GetAllControllerConfigurationsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETALLCONTROLLERCONFIGURATIONS_H
