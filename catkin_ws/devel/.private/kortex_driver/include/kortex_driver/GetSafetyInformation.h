// Generated by gencpp from file kortex_driver/GetSafetyInformation.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETSAFETYINFORMATION_H
#define KORTEX_DRIVER_MESSAGE_GETSAFETYINFORMATION_H

#include <ros/service_traits.h>


#include <kortex_driver/GetSafetyInformationRequest.h>
#include <kortex_driver/GetSafetyInformationResponse.h>


namespace kortex_driver
{

struct GetSafetyInformation
{

typedef GetSafetyInformationRequest Request;
typedef GetSafetyInformationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetSafetyInformation
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetSafetyInformation > {
  static const char* value()
  {
    return "03aeca1f2d2314fba73be4aeb3606ece";
  }

  static const char* value(const ::kortex_driver::GetSafetyInformation&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetSafetyInformation > {
  static const char* value()
  {
    return "kortex_driver/GetSafetyInformation";
  }

  static const char* value(const ::kortex_driver::GetSafetyInformation&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetSafetyInformationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetSafetyInformation >
template<>
struct MD5Sum< ::kortex_driver::GetSafetyInformationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetSafetyInformation >::value();
  }
  static const char* value(const ::kortex_driver::GetSafetyInformationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetSafetyInformationRequest> should match
// service_traits::DataType< ::kortex_driver::GetSafetyInformation >
template<>
struct DataType< ::kortex_driver::GetSafetyInformationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetSafetyInformation >::value();
  }
  static const char* value(const ::kortex_driver::GetSafetyInformationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetSafetyInformationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetSafetyInformation >
template<>
struct MD5Sum< ::kortex_driver::GetSafetyInformationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetSafetyInformation >::value();
  }
  static const char* value(const ::kortex_driver::GetSafetyInformationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetSafetyInformationResponse> should match
// service_traits::DataType< ::kortex_driver::GetSafetyInformation >
template<>
struct DataType< ::kortex_driver::GetSafetyInformationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetSafetyInformation >::value();
  }
  static const char* value(const ::kortex_driver::GetSafetyInformationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETSAFETYINFORMATION_H
