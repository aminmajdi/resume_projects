// Generated by gencpp from file kortex_driver/SendTwistJoystickCommand.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_SENDTWISTJOYSTICKCOMMAND_H
#define KORTEX_DRIVER_MESSAGE_SENDTWISTJOYSTICKCOMMAND_H

#include <ros/service_traits.h>


#include <kortex_driver/SendTwistJoystickCommandRequest.h>
#include <kortex_driver/SendTwistJoystickCommandResponse.h>


namespace kortex_driver
{

struct SendTwistJoystickCommand
{

typedef SendTwistJoystickCommandRequest Request;
typedef SendTwistJoystickCommandResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SendTwistJoystickCommand
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::SendTwistJoystickCommand > {
  static const char* value()
  {
    return "1d982d6ab027b7ae362cacd16bfb339f";
  }

  static const char* value(const ::kortex_driver::SendTwistJoystickCommand&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::SendTwistJoystickCommand > {
  static const char* value()
  {
    return "kortex_driver/SendTwistJoystickCommand";
  }

  static const char* value(const ::kortex_driver::SendTwistJoystickCommand&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::SendTwistJoystickCommandRequest> should match
// service_traits::MD5Sum< ::kortex_driver::SendTwistJoystickCommand >
template<>
struct MD5Sum< ::kortex_driver::SendTwistJoystickCommandRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SendTwistJoystickCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendTwistJoystickCommandRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SendTwistJoystickCommandRequest> should match
// service_traits::DataType< ::kortex_driver::SendTwistJoystickCommand >
template<>
struct DataType< ::kortex_driver::SendTwistJoystickCommandRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SendTwistJoystickCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendTwistJoystickCommandRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::SendTwistJoystickCommandResponse> should match
// service_traits::MD5Sum< ::kortex_driver::SendTwistJoystickCommand >
template<>
struct MD5Sum< ::kortex_driver::SendTwistJoystickCommandResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SendTwistJoystickCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendTwistJoystickCommandResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SendTwistJoystickCommandResponse> should match
// service_traits::DataType< ::kortex_driver::SendTwistJoystickCommand >
template<>
struct DataType< ::kortex_driver::SendTwistJoystickCommandResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SendTwistJoystickCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendTwistJoystickCommandResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_SENDTWISTJOYSTICKCOMMAND_H
