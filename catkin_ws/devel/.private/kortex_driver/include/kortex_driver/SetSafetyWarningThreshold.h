// Generated by gencpp from file kortex_driver/SetSafetyWarningThreshold.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_SETSAFETYWARNINGTHRESHOLD_H
#define KORTEX_DRIVER_MESSAGE_SETSAFETYWARNINGTHRESHOLD_H

#include <ros/service_traits.h>


#include <kortex_driver/SetSafetyWarningThresholdRequest.h>
#include <kortex_driver/SetSafetyWarningThresholdResponse.h>


namespace kortex_driver
{

struct SetSafetyWarningThreshold
{

typedef SetSafetyWarningThresholdRequest Request;
typedef SetSafetyWarningThresholdResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetSafetyWarningThreshold
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::SetSafetyWarningThreshold > {
  static const char* value()
  {
    return "0d6527f8c0e63583f63fafeb1405804a";
  }

  static const char* value(const ::kortex_driver::SetSafetyWarningThreshold&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::SetSafetyWarningThreshold > {
  static const char* value()
  {
    return "kortex_driver/SetSafetyWarningThreshold";
  }

  static const char* value(const ::kortex_driver::SetSafetyWarningThreshold&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::SetSafetyWarningThresholdRequest> should match
// service_traits::MD5Sum< ::kortex_driver::SetSafetyWarningThreshold >
template<>
struct MD5Sum< ::kortex_driver::SetSafetyWarningThresholdRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetSafetyWarningThreshold >::value();
  }
  static const char* value(const ::kortex_driver::SetSafetyWarningThresholdRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetSafetyWarningThresholdRequest> should match
// service_traits::DataType< ::kortex_driver::SetSafetyWarningThreshold >
template<>
struct DataType< ::kortex_driver::SetSafetyWarningThresholdRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetSafetyWarningThreshold >::value();
  }
  static const char* value(const ::kortex_driver::SetSafetyWarningThresholdRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::SetSafetyWarningThresholdResponse> should match
// service_traits::MD5Sum< ::kortex_driver::SetSafetyWarningThreshold >
template<>
struct MD5Sum< ::kortex_driver::SetSafetyWarningThresholdResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetSafetyWarningThreshold >::value();
  }
  static const char* value(const ::kortex_driver::SetSafetyWarningThresholdResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetSafetyWarningThresholdResponse> should match
// service_traits::DataType< ::kortex_driver::SetSafetyWarningThreshold >
template<>
struct DataType< ::kortex_driver::SetSafetyWarningThresholdResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetSafetyWarningThreshold >::value();
  }
  static const char* value(const ::kortex_driver::SetSafetyWarningThresholdResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_SETSAFETYWARNINGTHRESHOLD_H
