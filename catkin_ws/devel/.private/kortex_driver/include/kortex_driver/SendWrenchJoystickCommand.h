// Generated by gencpp from file kortex_driver/SendWrenchJoystickCommand.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_SENDWRENCHJOYSTICKCOMMAND_H
#define KORTEX_DRIVER_MESSAGE_SENDWRENCHJOYSTICKCOMMAND_H

#include <ros/service_traits.h>


#include <kortex_driver/SendWrenchJoystickCommandRequest.h>
#include <kortex_driver/SendWrenchJoystickCommandResponse.h>


namespace kortex_driver
{

struct SendWrenchJoystickCommand
{

typedef SendWrenchJoystickCommandRequest Request;
typedef SendWrenchJoystickCommandResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SendWrenchJoystickCommand
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::SendWrenchJoystickCommand > {
  static const char* value()
  {
    return "f2e3d158b1d1ef2944d97f7820b907ad";
  }

  static const char* value(const ::kortex_driver::SendWrenchJoystickCommand&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::SendWrenchJoystickCommand > {
  static const char* value()
  {
    return "kortex_driver/SendWrenchJoystickCommand";
  }

  static const char* value(const ::kortex_driver::SendWrenchJoystickCommand&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::SendWrenchJoystickCommandRequest> should match
// service_traits::MD5Sum< ::kortex_driver::SendWrenchJoystickCommand >
template<>
struct MD5Sum< ::kortex_driver::SendWrenchJoystickCommandRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SendWrenchJoystickCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendWrenchJoystickCommandRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SendWrenchJoystickCommandRequest> should match
// service_traits::DataType< ::kortex_driver::SendWrenchJoystickCommand >
template<>
struct DataType< ::kortex_driver::SendWrenchJoystickCommandRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SendWrenchJoystickCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendWrenchJoystickCommandRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::SendWrenchJoystickCommandResponse> should match
// service_traits::MD5Sum< ::kortex_driver::SendWrenchJoystickCommand >
template<>
struct MD5Sum< ::kortex_driver::SendWrenchJoystickCommandResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SendWrenchJoystickCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendWrenchJoystickCommandResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SendWrenchJoystickCommandResponse> should match
// service_traits::DataType< ::kortex_driver::SendWrenchJoystickCommand >
template<>
struct DataType< ::kortex_driver::SendWrenchJoystickCommandResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SendWrenchJoystickCommand >::value();
  }
  static const char* value(const ::kortex_driver::SendWrenchJoystickCommandResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_SENDWRENCHJOYSTICKCOMMAND_H
