// Generated by gencpp from file kortex_driver/ReadSequence.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_READSEQUENCE_H
#define KORTEX_DRIVER_MESSAGE_READSEQUENCE_H

#include <ros/service_traits.h>


#include <kortex_driver/ReadSequenceRequest.h>
#include <kortex_driver/ReadSequenceResponse.h>


namespace kortex_driver
{

struct ReadSequence
{

typedef ReadSequenceRequest Request;
typedef ReadSequenceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReadSequence
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ReadSequence > {
  static const char* value()
  {
    return "0ab194a94523857776c1584b29bc2bf1";
  }

  static const char* value(const ::kortex_driver::ReadSequence&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ReadSequence > {
  static const char* value()
  {
    return "kortex_driver/ReadSequence";
  }

  static const char* value(const ::kortex_driver::ReadSequence&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ReadSequenceRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ReadSequence >
template<>
struct MD5Sum< ::kortex_driver::ReadSequenceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadSequence >::value();
  }
  static const char* value(const ::kortex_driver::ReadSequenceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadSequenceRequest> should match
// service_traits::DataType< ::kortex_driver::ReadSequence >
template<>
struct DataType< ::kortex_driver::ReadSequenceRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadSequence >::value();
  }
  static const char* value(const ::kortex_driver::ReadSequenceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ReadSequenceResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ReadSequence >
template<>
struct MD5Sum< ::kortex_driver::ReadSequenceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadSequence >::value();
  }
  static const char* value(const ::kortex_driver::ReadSequenceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadSequenceResponse> should match
// service_traits::DataType< ::kortex_driver::ReadSequence >
template<>
struct DataType< ::kortex_driver::ReadSequenceResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadSequence >::value();
  }
  static const char* value(const ::kortex_driver::ReadSequenceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_READSEQUENCE_H
