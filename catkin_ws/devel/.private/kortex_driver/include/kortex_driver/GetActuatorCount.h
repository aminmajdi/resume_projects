// Generated by gencpp from file kortex_driver/GetActuatorCount.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETACTUATORCOUNT_H
#define KORTEX_DRIVER_MESSAGE_GETACTUATORCOUNT_H

#include <ros/service_traits.h>


#include <kortex_driver/GetActuatorCountRequest.h>
#include <kortex_driver/GetActuatorCountResponse.h>


namespace kortex_driver
{

struct GetActuatorCount
{

typedef GetActuatorCountRequest Request;
typedef GetActuatorCountResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetActuatorCount
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetActuatorCount > {
  static const char* value()
  {
    return "e8b096678f65c6ea2fbcbfdbbf77d42f";
  }

  static const char* value(const ::kortex_driver::GetActuatorCount&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetActuatorCount > {
  static const char* value()
  {
    return "kortex_driver/GetActuatorCount";
  }

  static const char* value(const ::kortex_driver::GetActuatorCount&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetActuatorCountRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetActuatorCount >
template<>
struct MD5Sum< ::kortex_driver::GetActuatorCountRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetActuatorCount >::value();
  }
  static const char* value(const ::kortex_driver::GetActuatorCountRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetActuatorCountRequest> should match
// service_traits::DataType< ::kortex_driver::GetActuatorCount >
template<>
struct DataType< ::kortex_driver::GetActuatorCountRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetActuatorCount >::value();
  }
  static const char* value(const ::kortex_driver::GetActuatorCountRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetActuatorCountResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetActuatorCount >
template<>
struct MD5Sum< ::kortex_driver::GetActuatorCountResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetActuatorCount >::value();
  }
  static const char* value(const ::kortex_driver::GetActuatorCountResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetActuatorCountResponse> should match
// service_traits::DataType< ::kortex_driver::GetActuatorCount >
template<>
struct DataType< ::kortex_driver::GetActuatorCountResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetActuatorCount >::value();
  }
  static const char* value(const ::kortex_driver::GetActuatorCountResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETACTUATORCOUNT_H
