// Generated by gencpp from file kortex_driver/GetFirmwareBundleVersions.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETFIRMWAREBUNDLEVERSIONS_H
#define KORTEX_DRIVER_MESSAGE_GETFIRMWAREBUNDLEVERSIONS_H

#include <ros/service_traits.h>


#include <kortex_driver/GetFirmwareBundleVersionsRequest.h>
#include <kortex_driver/GetFirmwareBundleVersionsResponse.h>


namespace kortex_driver
{

struct GetFirmwareBundleVersions
{

typedef GetFirmwareBundleVersionsRequest Request;
typedef GetFirmwareBundleVersionsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetFirmwareBundleVersions
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetFirmwareBundleVersions > {
  static const char* value()
  {
    return "8a198c1bd1965cc2d1e06f5a3548e004";
  }

  static const char* value(const ::kortex_driver::GetFirmwareBundleVersions&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetFirmwareBundleVersions > {
  static const char* value()
  {
    return "kortex_driver/GetFirmwareBundleVersions";
  }

  static const char* value(const ::kortex_driver::GetFirmwareBundleVersions&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetFirmwareBundleVersionsRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetFirmwareBundleVersions >
template<>
struct MD5Sum< ::kortex_driver::GetFirmwareBundleVersionsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetFirmwareBundleVersions >::value();
  }
  static const char* value(const ::kortex_driver::GetFirmwareBundleVersionsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetFirmwareBundleVersionsRequest> should match
// service_traits::DataType< ::kortex_driver::GetFirmwareBundleVersions >
template<>
struct DataType< ::kortex_driver::GetFirmwareBundleVersionsRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetFirmwareBundleVersions >::value();
  }
  static const char* value(const ::kortex_driver::GetFirmwareBundleVersionsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetFirmwareBundleVersionsResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetFirmwareBundleVersions >
template<>
struct MD5Sum< ::kortex_driver::GetFirmwareBundleVersionsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetFirmwareBundleVersions >::value();
  }
  static const char* value(const ::kortex_driver::GetFirmwareBundleVersionsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetFirmwareBundleVersionsResponse> should match
// service_traits::DataType< ::kortex_driver::GetFirmwareBundleVersions >
template<>
struct DataType< ::kortex_driver::GetFirmwareBundleVersionsResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetFirmwareBundleVersions >::value();
  }
  static const char* value(const ::kortex_driver::GetFirmwareBundleVersionsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETFIRMWAREBUNDLEVERSIONS_H
