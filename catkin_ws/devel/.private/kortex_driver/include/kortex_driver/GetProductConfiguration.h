// Generated by gencpp from file kortex_driver/GetProductConfiguration.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETPRODUCTCONFIGURATION_H
#define KORTEX_DRIVER_MESSAGE_GETPRODUCTCONFIGURATION_H

#include <ros/service_traits.h>


#include <kortex_driver/GetProductConfigurationRequest.h>
#include <kortex_driver/GetProductConfigurationResponse.h>


namespace kortex_driver
{

struct GetProductConfiguration
{

typedef GetProductConfigurationRequest Request;
typedef GetProductConfigurationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetProductConfiguration
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetProductConfiguration > {
  static const char* value()
  {
    return "8c23adb82ae0908ba4fc2ba8d52a7831";
  }

  static const char* value(const ::kortex_driver::GetProductConfiguration&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetProductConfiguration > {
  static const char* value()
  {
    return "kortex_driver/GetProductConfiguration";
  }

  static const char* value(const ::kortex_driver::GetProductConfiguration&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetProductConfigurationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetProductConfiguration >
template<>
struct MD5Sum< ::kortex_driver::GetProductConfigurationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetProductConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetProductConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetProductConfigurationRequest> should match
// service_traits::DataType< ::kortex_driver::GetProductConfiguration >
template<>
struct DataType< ::kortex_driver::GetProductConfigurationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetProductConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetProductConfigurationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetProductConfigurationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetProductConfiguration >
template<>
struct MD5Sum< ::kortex_driver::GetProductConfigurationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetProductConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetProductConfigurationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetProductConfigurationResponse> should match
// service_traits::DataType< ::kortex_driver::GetProductConfiguration >
template<>
struct DataType< ::kortex_driver::GetProductConfigurationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetProductConfiguration >::value();
  }
  static const char* value(const ::kortex_driver::GetProductConfigurationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETPRODUCTCONFIGURATION_H
