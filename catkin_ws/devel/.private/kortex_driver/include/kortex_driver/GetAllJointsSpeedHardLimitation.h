// Generated by gencpp from file kortex_driver/GetAllJointsSpeedHardLimitation.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETALLJOINTSSPEEDHARDLIMITATION_H
#define KORTEX_DRIVER_MESSAGE_GETALLJOINTSSPEEDHARDLIMITATION_H

#include <ros/service_traits.h>


#include <kortex_driver/GetAllJointsSpeedHardLimitationRequest.h>
#include <kortex_driver/GetAllJointsSpeedHardLimitationResponse.h>


namespace kortex_driver
{

struct GetAllJointsSpeedHardLimitation
{

typedef GetAllJointsSpeedHardLimitationRequest Request;
typedef GetAllJointsSpeedHardLimitationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetAllJointsSpeedHardLimitation
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetAllJointsSpeedHardLimitation > {
  static const char* value()
  {
    return "80ab5247f79a646a096a6bb5bc451a7d";
  }

  static const char* value(const ::kortex_driver::GetAllJointsSpeedHardLimitation&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetAllJointsSpeedHardLimitation > {
  static const char* value()
  {
    return "kortex_driver/GetAllJointsSpeedHardLimitation";
  }

  static const char* value(const ::kortex_driver::GetAllJointsSpeedHardLimitation&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetAllJointsSpeedHardLimitationRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetAllJointsSpeedHardLimitation >
template<>
struct MD5Sum< ::kortex_driver::GetAllJointsSpeedHardLimitationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetAllJointsSpeedHardLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetAllJointsSpeedHardLimitationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetAllJointsSpeedHardLimitationRequest> should match
// service_traits::DataType< ::kortex_driver::GetAllJointsSpeedHardLimitation >
template<>
struct DataType< ::kortex_driver::GetAllJointsSpeedHardLimitationRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetAllJointsSpeedHardLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetAllJointsSpeedHardLimitationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetAllJointsSpeedHardLimitationResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetAllJointsSpeedHardLimitation >
template<>
struct MD5Sum< ::kortex_driver::GetAllJointsSpeedHardLimitationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetAllJointsSpeedHardLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetAllJointsSpeedHardLimitationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetAllJointsSpeedHardLimitationResponse> should match
// service_traits::DataType< ::kortex_driver::GetAllJointsSpeedHardLimitation >
template<>
struct DataType< ::kortex_driver::GetAllJointsSpeedHardLimitationResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetAllJointsSpeedHardLimitation >::value();
  }
  static const char* value(const ::kortex_driver::GetAllJointsSpeedHardLimitationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETALLJOINTSSPEEDHARDLIMITATION_H
