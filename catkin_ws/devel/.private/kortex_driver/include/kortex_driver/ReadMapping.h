// Generated by gencpp from file kortex_driver/ReadMapping.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_READMAPPING_H
#define KORTEX_DRIVER_MESSAGE_READMAPPING_H

#include <ros/service_traits.h>


#include <kortex_driver/ReadMappingRequest.h>
#include <kortex_driver/ReadMappingResponse.h>


namespace kortex_driver
{

struct ReadMapping
{

typedef ReadMappingRequest Request;
typedef ReadMappingResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReadMapping
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ReadMapping > {
  static const char* value()
  {
    return "a098ab486d258af0a3206d3f4ae9d15c";
  }

  static const char* value(const ::kortex_driver::ReadMapping&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ReadMapping > {
  static const char* value()
  {
    return "kortex_driver/ReadMapping";
  }

  static const char* value(const ::kortex_driver::ReadMapping&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ReadMappingRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ReadMapping >
template<>
struct MD5Sum< ::kortex_driver::ReadMappingRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadMapping >::value();
  }
  static const char* value(const ::kortex_driver::ReadMappingRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadMappingRequest> should match
// service_traits::DataType< ::kortex_driver::ReadMapping >
template<>
struct DataType< ::kortex_driver::ReadMappingRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadMapping >::value();
  }
  static const char* value(const ::kortex_driver::ReadMappingRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ReadMappingResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ReadMapping >
template<>
struct MD5Sum< ::kortex_driver::ReadMappingResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadMapping >::value();
  }
  static const char* value(const ::kortex_driver::ReadMappingResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadMappingResponse> should match
// service_traits::DataType< ::kortex_driver::ReadMapping >
template<>
struct DataType< ::kortex_driver::ReadMappingResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadMapping >::value();
  }
  static const char* value(const ::kortex_driver::ReadMappingResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_READMAPPING_H
