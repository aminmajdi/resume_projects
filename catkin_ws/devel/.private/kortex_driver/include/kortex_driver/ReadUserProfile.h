// Generated by gencpp from file kortex_driver/ReadUserProfile.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_READUSERPROFILE_H
#define KORTEX_DRIVER_MESSAGE_READUSERPROFILE_H

#include <ros/service_traits.h>


#include <kortex_driver/ReadUserProfileRequest.h>
#include <kortex_driver/ReadUserProfileResponse.h>


namespace kortex_driver
{

struct ReadUserProfile
{

typedef ReadUserProfileRequest Request;
typedef ReadUserProfileResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReadUserProfile
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ReadUserProfile > {
  static const char* value()
  {
    return "88ed6f69b3ce05a4b3c054859c8deeff";
  }

  static const char* value(const ::kortex_driver::ReadUserProfile&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ReadUserProfile > {
  static const char* value()
  {
    return "kortex_driver/ReadUserProfile";
  }

  static const char* value(const ::kortex_driver::ReadUserProfile&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ReadUserProfileRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ReadUserProfile >
template<>
struct MD5Sum< ::kortex_driver::ReadUserProfileRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadUserProfile >::value();
  }
  static const char* value(const ::kortex_driver::ReadUserProfileRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadUserProfileRequest> should match
// service_traits::DataType< ::kortex_driver::ReadUserProfile >
template<>
struct DataType< ::kortex_driver::ReadUserProfileRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadUserProfile >::value();
  }
  static const char* value(const ::kortex_driver::ReadUserProfileRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ReadUserProfileResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ReadUserProfile >
template<>
struct MD5Sum< ::kortex_driver::ReadUserProfileResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadUserProfile >::value();
  }
  static const char* value(const ::kortex_driver::ReadUserProfileResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadUserProfileResponse> should match
// service_traits::DataType< ::kortex_driver::ReadUserProfile >
template<>
struct DataType< ::kortex_driver::ReadUserProfileResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadUserProfile >::value();
  }
  static const char* value(const ::kortex_driver::ReadUserProfileResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_READUSERPROFILE_H
