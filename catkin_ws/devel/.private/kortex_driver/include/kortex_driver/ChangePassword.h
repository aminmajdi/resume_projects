// Generated by gencpp from file kortex_driver/ChangePassword.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_CHANGEPASSWORD_H
#define KORTEX_DRIVER_MESSAGE_CHANGEPASSWORD_H

#include <ros/service_traits.h>


#include <kortex_driver/ChangePasswordRequest.h>
#include <kortex_driver/ChangePasswordResponse.h>


namespace kortex_driver
{

struct ChangePassword
{

typedef ChangePasswordRequest Request;
typedef ChangePasswordResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ChangePassword
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ChangePassword > {
  static const char* value()
  {
    return "df30b453fac13606ed2374a5df7abb80";
  }

  static const char* value(const ::kortex_driver::ChangePassword&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ChangePassword > {
  static const char* value()
  {
    return "kortex_driver/ChangePassword";
  }

  static const char* value(const ::kortex_driver::ChangePassword&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ChangePasswordRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ChangePassword >
template<>
struct MD5Sum< ::kortex_driver::ChangePasswordRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ChangePassword >::value();
  }
  static const char* value(const ::kortex_driver::ChangePasswordRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ChangePasswordRequest> should match
// service_traits::DataType< ::kortex_driver::ChangePassword >
template<>
struct DataType< ::kortex_driver::ChangePasswordRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ChangePassword >::value();
  }
  static const char* value(const ::kortex_driver::ChangePasswordRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ChangePasswordResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ChangePassword >
template<>
struct MD5Sum< ::kortex_driver::ChangePasswordResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ChangePassword >::value();
  }
  static const char* value(const ::kortex_driver::ChangePasswordResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ChangePasswordResponse> should match
// service_traits::DataType< ::kortex_driver::ChangePassword >
template<>
struct DataType< ::kortex_driver::ChangePasswordResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ChangePassword >::value();
  }
  static const char* value(const ::kortex_driver::ChangePasswordResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_CHANGEPASSWORD_H
