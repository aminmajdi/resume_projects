// Generated by gencpp from file kortex_driver/GetAvailableWifi.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETAVAILABLEWIFI_H
#define KORTEX_DRIVER_MESSAGE_GETAVAILABLEWIFI_H

#include <ros/service_traits.h>


#include <kortex_driver/GetAvailableWifiRequest.h>
#include <kortex_driver/GetAvailableWifiResponse.h>


namespace kortex_driver
{

struct GetAvailableWifi
{

typedef GetAvailableWifiRequest Request;
typedef GetAvailableWifiResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetAvailableWifi
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetAvailableWifi > {
  static const char* value()
  {
    return "7759436e458092e2d8f72d35d5d731f7";
  }

  static const char* value(const ::kortex_driver::GetAvailableWifi&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetAvailableWifi > {
  static const char* value()
  {
    return "kortex_driver/GetAvailableWifi";
  }

  static const char* value(const ::kortex_driver::GetAvailableWifi&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetAvailableWifiRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetAvailableWifi >
template<>
struct MD5Sum< ::kortex_driver::GetAvailableWifiRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetAvailableWifi >::value();
  }
  static const char* value(const ::kortex_driver::GetAvailableWifiRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetAvailableWifiRequest> should match
// service_traits::DataType< ::kortex_driver::GetAvailableWifi >
template<>
struct DataType< ::kortex_driver::GetAvailableWifiRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetAvailableWifi >::value();
  }
  static const char* value(const ::kortex_driver::GetAvailableWifiRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetAvailableWifiResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetAvailableWifi >
template<>
struct MD5Sum< ::kortex_driver::GetAvailableWifiResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetAvailableWifi >::value();
  }
  static const char* value(const ::kortex_driver::GetAvailableWifiResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetAvailableWifiResponse> should match
// service_traits::DataType< ::kortex_driver::GetAvailableWifi >
template<>
struct DataType< ::kortex_driver::GetAvailableWifiResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetAvailableWifi >::value();
  }
  static const char* value(const ::kortex_driver::GetAvailableWifiResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETAVAILABLEWIFI_H
