// Generated by gencpp from file kortex_driver/SetDesiredLinearTwist.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_SETDESIREDLINEARTWIST_H
#define KORTEX_DRIVER_MESSAGE_SETDESIREDLINEARTWIST_H

#include <ros/service_traits.h>


#include <kortex_driver/SetDesiredLinearTwistRequest.h>
#include <kortex_driver/SetDesiredLinearTwistResponse.h>


namespace kortex_driver
{

struct SetDesiredLinearTwist
{

typedef SetDesiredLinearTwistRequest Request;
typedef SetDesiredLinearTwistResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetDesiredLinearTwist
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::SetDesiredLinearTwist > {
  static const char* value()
  {
    return "2fd07256b791580cac358c271b7f0f2a";
  }

  static const char* value(const ::kortex_driver::SetDesiredLinearTwist&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::SetDesiredLinearTwist > {
  static const char* value()
  {
    return "kortex_driver/SetDesiredLinearTwist";
  }

  static const char* value(const ::kortex_driver::SetDesiredLinearTwist&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::SetDesiredLinearTwistRequest> should match
// service_traits::MD5Sum< ::kortex_driver::SetDesiredLinearTwist >
template<>
struct MD5Sum< ::kortex_driver::SetDesiredLinearTwistRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetDesiredLinearTwist >::value();
  }
  static const char* value(const ::kortex_driver::SetDesiredLinearTwistRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetDesiredLinearTwistRequest> should match
// service_traits::DataType< ::kortex_driver::SetDesiredLinearTwist >
template<>
struct DataType< ::kortex_driver::SetDesiredLinearTwistRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetDesiredLinearTwist >::value();
  }
  static const char* value(const ::kortex_driver::SetDesiredLinearTwistRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::SetDesiredLinearTwistResponse> should match
// service_traits::MD5Sum< ::kortex_driver::SetDesiredLinearTwist >
template<>
struct MD5Sum< ::kortex_driver::SetDesiredLinearTwistResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::SetDesiredLinearTwist >::value();
  }
  static const char* value(const ::kortex_driver::SetDesiredLinearTwistResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::SetDesiredLinearTwistResponse> should match
// service_traits::DataType< ::kortex_driver::SetDesiredLinearTwist >
template<>
struct DataType< ::kortex_driver::SetDesiredLinearTwistResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::SetDesiredLinearTwist >::value();
  }
  static const char* value(const ::kortex_driver::SetDesiredLinearTwistResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_SETDESIREDLINEARTWIST_H
