// Generated by gencpp from file kortex_driver/GetMeasuredCartesianPose.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETMEASUREDCARTESIANPOSE_H
#define KORTEX_DRIVER_MESSAGE_GETMEASUREDCARTESIANPOSE_H

#include <ros/service_traits.h>


#include <kortex_driver/GetMeasuredCartesianPoseRequest.h>
#include <kortex_driver/GetMeasuredCartesianPoseResponse.h>


namespace kortex_driver
{

struct GetMeasuredCartesianPose
{

typedef GetMeasuredCartesianPoseRequest Request;
typedef GetMeasuredCartesianPoseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetMeasuredCartesianPose
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetMeasuredCartesianPose > {
  static const char* value()
  {
    return "4eaf9f25cbe269662009a9ad397d3f07";
  }

  static const char* value(const ::kortex_driver::GetMeasuredCartesianPose&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetMeasuredCartesianPose > {
  static const char* value()
  {
    return "kortex_driver/GetMeasuredCartesianPose";
  }

  static const char* value(const ::kortex_driver::GetMeasuredCartesianPose&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetMeasuredCartesianPoseRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetMeasuredCartesianPose >
template<>
struct MD5Sum< ::kortex_driver::GetMeasuredCartesianPoseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetMeasuredCartesianPose >::value();
  }
  static const char* value(const ::kortex_driver::GetMeasuredCartesianPoseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetMeasuredCartesianPoseRequest> should match
// service_traits::DataType< ::kortex_driver::GetMeasuredCartesianPose >
template<>
struct DataType< ::kortex_driver::GetMeasuredCartesianPoseRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetMeasuredCartesianPose >::value();
  }
  static const char* value(const ::kortex_driver::GetMeasuredCartesianPoseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetMeasuredCartesianPoseResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetMeasuredCartesianPose >
template<>
struct MD5Sum< ::kortex_driver::GetMeasuredCartesianPoseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetMeasuredCartesianPose >::value();
  }
  static const char* value(const ::kortex_driver::GetMeasuredCartesianPoseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetMeasuredCartesianPoseResponse> should match
// service_traits::DataType< ::kortex_driver::GetMeasuredCartesianPose >
template<>
struct DataType< ::kortex_driver::GetMeasuredCartesianPoseResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetMeasuredCartesianPose >::value();
  }
  static const char* value(const ::kortex_driver::GetMeasuredCartesianPoseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETMEASUREDCARTESIANPOSE_H
