// Generated by gencpp from file kortex_driver/ReadAllMappings.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_READALLMAPPINGS_H
#define KORTEX_DRIVER_MESSAGE_READALLMAPPINGS_H

#include <ros/service_traits.h>


#include <kortex_driver/ReadAllMappingsRequest.h>
#include <kortex_driver/ReadAllMappingsResponse.h>


namespace kortex_driver
{

struct ReadAllMappings
{

typedef ReadAllMappingsRequest Request;
typedef ReadAllMappingsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReadAllMappings
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ReadAllMappings > {
  static const char* value()
  {
    return "b5feb1f35cacb5c11e26808022e25f5c";
  }

  static const char* value(const ::kortex_driver::ReadAllMappings&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ReadAllMappings > {
  static const char* value()
  {
    return "kortex_driver/ReadAllMappings";
  }

  static const char* value(const ::kortex_driver::ReadAllMappings&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ReadAllMappingsRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ReadAllMappings >
template<>
struct MD5Sum< ::kortex_driver::ReadAllMappingsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadAllMappings >::value();
  }
  static const char* value(const ::kortex_driver::ReadAllMappingsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadAllMappingsRequest> should match
// service_traits::DataType< ::kortex_driver::ReadAllMappings >
template<>
struct DataType< ::kortex_driver::ReadAllMappingsRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadAllMappings >::value();
  }
  static const char* value(const ::kortex_driver::ReadAllMappingsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ReadAllMappingsResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ReadAllMappings >
template<>
struct MD5Sum< ::kortex_driver::ReadAllMappingsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadAllMappings >::value();
  }
  static const char* value(const ::kortex_driver::ReadAllMappingsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadAllMappingsResponse> should match
// service_traits::DataType< ::kortex_driver::ReadAllMappings >
template<>
struct DataType< ::kortex_driver::ReadAllMappingsResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadAllMappings >::value();
  }
  static const char* value(const ::kortex_driver::ReadAllMappingsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_READALLMAPPINGS_H
