// Generated by gencpp from file kortex_driver/ReadAllUserProfiles.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_READALLUSERPROFILES_H
#define KORTEX_DRIVER_MESSAGE_READALLUSERPROFILES_H

#include <ros/service_traits.h>


#include <kortex_driver/ReadAllUserProfilesRequest.h>
#include <kortex_driver/ReadAllUserProfilesResponse.h>


namespace kortex_driver
{

struct ReadAllUserProfiles
{

typedef ReadAllUserProfilesRequest Request;
typedef ReadAllUserProfilesResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ReadAllUserProfiles
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ReadAllUserProfiles > {
  static const char* value()
  {
    return "682c67f2598d4e520be0fc6015a67bc4";
  }

  static const char* value(const ::kortex_driver::ReadAllUserProfiles&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ReadAllUserProfiles > {
  static const char* value()
  {
    return "kortex_driver/ReadAllUserProfiles";
  }

  static const char* value(const ::kortex_driver::ReadAllUserProfiles&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ReadAllUserProfilesRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ReadAllUserProfiles >
template<>
struct MD5Sum< ::kortex_driver::ReadAllUserProfilesRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadAllUserProfiles >::value();
  }
  static const char* value(const ::kortex_driver::ReadAllUserProfilesRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadAllUserProfilesRequest> should match
// service_traits::DataType< ::kortex_driver::ReadAllUserProfiles >
template<>
struct DataType< ::kortex_driver::ReadAllUserProfilesRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadAllUserProfiles >::value();
  }
  static const char* value(const ::kortex_driver::ReadAllUserProfilesRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ReadAllUserProfilesResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ReadAllUserProfiles >
template<>
struct MD5Sum< ::kortex_driver::ReadAllUserProfilesResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ReadAllUserProfiles >::value();
  }
  static const char* value(const ::kortex_driver::ReadAllUserProfilesResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ReadAllUserProfilesResponse> should match
// service_traits::DataType< ::kortex_driver::ReadAllUserProfiles >
template<>
struct DataType< ::kortex_driver::ReadAllUserProfilesResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ReadAllUserProfiles >::value();
  }
  static const char* value(const ::kortex_driver::ReadAllUserProfilesResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_READALLUSERPROFILES_H
