// Generated by gencpp from file kortex_driver/GetMeasuredGripperMovement.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETMEASUREDGRIPPERMOVEMENT_H
#define KORTEX_DRIVER_MESSAGE_GETMEASUREDGRIPPERMOVEMENT_H

#include <ros/service_traits.h>


#include <kortex_driver/GetMeasuredGripperMovementRequest.h>
#include <kortex_driver/GetMeasuredGripperMovementResponse.h>


namespace kortex_driver
{

struct GetMeasuredGripperMovement
{

typedef GetMeasuredGripperMovementRequest Request;
typedef GetMeasuredGripperMovementResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetMeasuredGripperMovement
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetMeasuredGripperMovement > {
  static const char* value()
  {
    return "8a811dcc01240e06c24ef1514e8bc606";
  }

  static const char* value(const ::kortex_driver::GetMeasuredGripperMovement&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetMeasuredGripperMovement > {
  static const char* value()
  {
    return "kortex_driver/GetMeasuredGripperMovement";
  }

  static const char* value(const ::kortex_driver::GetMeasuredGripperMovement&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetMeasuredGripperMovementRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetMeasuredGripperMovement >
template<>
struct MD5Sum< ::kortex_driver::GetMeasuredGripperMovementRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetMeasuredGripperMovement >::value();
  }
  static const char* value(const ::kortex_driver::GetMeasuredGripperMovementRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetMeasuredGripperMovementRequest> should match
// service_traits::DataType< ::kortex_driver::GetMeasuredGripperMovement >
template<>
struct DataType< ::kortex_driver::GetMeasuredGripperMovementRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetMeasuredGripperMovement >::value();
  }
  static const char* value(const ::kortex_driver::GetMeasuredGripperMovementRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetMeasuredGripperMovementResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetMeasuredGripperMovement >
template<>
struct MD5Sum< ::kortex_driver::GetMeasuredGripperMovementResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetMeasuredGripperMovement >::value();
  }
  static const char* value(const ::kortex_driver::GetMeasuredGripperMovementResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetMeasuredGripperMovementResponse> should match
// service_traits::DataType< ::kortex_driver::GetMeasuredGripperMovement >
template<>
struct DataType< ::kortex_driver::GetMeasuredGripperMovementResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetMeasuredGripperMovement >::value();
  }
  static const char* value(const ::kortex_driver::GetMeasuredGripperMovementResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETMEASUREDGRIPPERMOVEMENT_H
