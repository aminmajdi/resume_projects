// Generated by gencpp from file kortex_driver/ResetJointSpeedSoftLimits.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_RESETJOINTSPEEDSOFTLIMITS_H
#define KORTEX_DRIVER_MESSAGE_RESETJOINTSPEEDSOFTLIMITS_H

#include <ros/service_traits.h>


#include <kortex_driver/ResetJointSpeedSoftLimitsRequest.h>
#include <kortex_driver/ResetJointSpeedSoftLimitsResponse.h>


namespace kortex_driver
{

struct ResetJointSpeedSoftLimits
{

typedef ResetJointSpeedSoftLimitsRequest Request;
typedef ResetJointSpeedSoftLimitsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ResetJointSpeedSoftLimits
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::ResetJointSpeedSoftLimits > {
  static const char* value()
  {
    return "7d22c334332447e55a639a3764ac0a17";
  }

  static const char* value(const ::kortex_driver::ResetJointSpeedSoftLimits&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::ResetJointSpeedSoftLimits > {
  static const char* value()
  {
    return "kortex_driver/ResetJointSpeedSoftLimits";
  }

  static const char* value(const ::kortex_driver::ResetJointSpeedSoftLimits&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::ResetJointSpeedSoftLimitsRequest> should match
// service_traits::MD5Sum< ::kortex_driver::ResetJointSpeedSoftLimits >
template<>
struct MD5Sum< ::kortex_driver::ResetJointSpeedSoftLimitsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ResetJointSpeedSoftLimits >::value();
  }
  static const char* value(const ::kortex_driver::ResetJointSpeedSoftLimitsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ResetJointSpeedSoftLimitsRequest> should match
// service_traits::DataType< ::kortex_driver::ResetJointSpeedSoftLimits >
template<>
struct DataType< ::kortex_driver::ResetJointSpeedSoftLimitsRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ResetJointSpeedSoftLimits >::value();
  }
  static const char* value(const ::kortex_driver::ResetJointSpeedSoftLimitsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::ResetJointSpeedSoftLimitsResponse> should match
// service_traits::MD5Sum< ::kortex_driver::ResetJointSpeedSoftLimits >
template<>
struct MD5Sum< ::kortex_driver::ResetJointSpeedSoftLimitsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::ResetJointSpeedSoftLimits >::value();
  }
  static const char* value(const ::kortex_driver::ResetJointSpeedSoftLimitsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::ResetJointSpeedSoftLimitsResponse> should match
// service_traits::DataType< ::kortex_driver::ResetJointSpeedSoftLimits >
template<>
struct DataType< ::kortex_driver::ResetJointSpeedSoftLimitsResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::ResetJointSpeedSoftLimits >::value();
  }
  static const char* value(const ::kortex_driver::ResetJointSpeedSoftLimitsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_RESETJOINTSPEEDSOFTLIMITS_H
