// Generated by gencpp from file kortex_driver/PlayCartesianTrajectory.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_PLAYCARTESIANTRAJECTORY_H
#define KORTEX_DRIVER_MESSAGE_PLAYCARTESIANTRAJECTORY_H

#include <ros/service_traits.h>


#include <kortex_driver/PlayCartesianTrajectoryRequest.h>
#include <kortex_driver/PlayCartesianTrajectoryResponse.h>


namespace kortex_driver
{

struct PlayCartesianTrajectory
{

typedef PlayCartesianTrajectoryRequest Request;
typedef PlayCartesianTrajectoryResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PlayCartesianTrajectory
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::PlayCartesianTrajectory > {
  static const char* value()
  {
    return "464f528a5fe3cfaa9d04f8e718f01a5c";
  }

  static const char* value(const ::kortex_driver::PlayCartesianTrajectory&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::PlayCartesianTrajectory > {
  static const char* value()
  {
    return "kortex_driver/PlayCartesianTrajectory";
  }

  static const char* value(const ::kortex_driver::PlayCartesianTrajectory&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::PlayCartesianTrajectoryRequest> should match
// service_traits::MD5Sum< ::kortex_driver::PlayCartesianTrajectory >
template<>
struct MD5Sum< ::kortex_driver::PlayCartesianTrajectoryRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::PlayCartesianTrajectory >::value();
  }
  static const char* value(const ::kortex_driver::PlayCartesianTrajectoryRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::PlayCartesianTrajectoryRequest> should match
// service_traits::DataType< ::kortex_driver::PlayCartesianTrajectory >
template<>
struct DataType< ::kortex_driver::PlayCartesianTrajectoryRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::PlayCartesianTrajectory >::value();
  }
  static const char* value(const ::kortex_driver::PlayCartesianTrajectoryRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::PlayCartesianTrajectoryResponse> should match
// service_traits::MD5Sum< ::kortex_driver::PlayCartesianTrajectory >
template<>
struct MD5Sum< ::kortex_driver::PlayCartesianTrajectoryResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::PlayCartesianTrajectory >::value();
  }
  static const char* value(const ::kortex_driver::PlayCartesianTrajectoryResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::PlayCartesianTrajectoryResponse> should match
// service_traits::DataType< ::kortex_driver::PlayCartesianTrajectory >
template<>
struct DataType< ::kortex_driver::PlayCartesianTrajectoryResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::PlayCartesianTrajectory >::value();
  }
  static const char* value(const ::kortex_driver::PlayCartesianTrajectoryResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_PLAYCARTESIANTRAJECTORY_H
