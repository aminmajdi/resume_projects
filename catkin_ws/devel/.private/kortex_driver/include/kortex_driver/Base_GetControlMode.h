// Generated by gencpp from file kortex_driver/Base_GetControlMode.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_BASE_GETCONTROLMODE_H
#define KORTEX_DRIVER_MESSAGE_BASE_GETCONTROLMODE_H

#include <ros/service_traits.h>


#include <kortex_driver/Base_GetControlModeRequest.h>
#include <kortex_driver/Base_GetControlModeResponse.h>


namespace kortex_driver
{

struct Base_GetControlMode
{

typedef Base_GetControlModeRequest Request;
typedef Base_GetControlModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Base_GetControlMode
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::Base_GetControlMode > {
  static const char* value()
  {
    return "4be007dfc37d8830546d4956881c26d5";
  }

  static const char* value(const ::kortex_driver::Base_GetControlMode&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::Base_GetControlMode > {
  static const char* value()
  {
    return "kortex_driver/Base_GetControlMode";
  }

  static const char* value(const ::kortex_driver::Base_GetControlMode&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::Base_GetControlModeRequest> should match
// service_traits::MD5Sum< ::kortex_driver::Base_GetControlMode >
template<>
struct MD5Sum< ::kortex_driver::Base_GetControlModeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::Base_GetControlMode >::value();
  }
  static const char* value(const ::kortex_driver::Base_GetControlModeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::Base_GetControlModeRequest> should match
// service_traits::DataType< ::kortex_driver::Base_GetControlMode >
template<>
struct DataType< ::kortex_driver::Base_GetControlModeRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::Base_GetControlMode >::value();
  }
  static const char* value(const ::kortex_driver::Base_GetControlModeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::Base_GetControlModeResponse> should match
// service_traits::MD5Sum< ::kortex_driver::Base_GetControlMode >
template<>
struct MD5Sum< ::kortex_driver::Base_GetControlModeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::Base_GetControlMode >::value();
  }
  static const char* value(const ::kortex_driver::Base_GetControlModeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::Base_GetControlModeResponse> should match
// service_traits::DataType< ::kortex_driver::Base_GetControlMode >
template<>
struct DataType< ::kortex_driver::Base_GetControlModeResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::Base_GetControlMode >::value();
  }
  static const char* value(const ::kortex_driver::Base_GetControlModeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_BASE_GETCONTROLMODE_H
