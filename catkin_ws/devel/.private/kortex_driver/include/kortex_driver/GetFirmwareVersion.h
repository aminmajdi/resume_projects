// Generated by gencpp from file kortex_driver/GetFirmwareVersion.msg
// DO NOT EDIT!


#ifndef KORTEX_DRIVER_MESSAGE_GETFIRMWAREVERSION_H
#define KORTEX_DRIVER_MESSAGE_GETFIRMWAREVERSION_H

#include <ros/service_traits.h>


#include <kortex_driver/GetFirmwareVersionRequest.h>
#include <kortex_driver/GetFirmwareVersionResponse.h>


namespace kortex_driver
{

struct GetFirmwareVersion
{

typedef GetFirmwareVersionRequest Request;
typedef GetFirmwareVersionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetFirmwareVersion
} // namespace kortex_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kortex_driver::GetFirmwareVersion > {
  static const char* value()
  {
    return "b9c18ab692345d79a149debba533958f";
  }

  static const char* value(const ::kortex_driver::GetFirmwareVersion&) { return value(); }
};

template<>
struct DataType< ::kortex_driver::GetFirmwareVersion > {
  static const char* value()
  {
    return "kortex_driver/GetFirmwareVersion";
  }

  static const char* value(const ::kortex_driver::GetFirmwareVersion&) { return value(); }
};


// service_traits::MD5Sum< ::kortex_driver::GetFirmwareVersionRequest> should match
// service_traits::MD5Sum< ::kortex_driver::GetFirmwareVersion >
template<>
struct MD5Sum< ::kortex_driver::GetFirmwareVersionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetFirmwareVersion >::value();
  }
  static const char* value(const ::kortex_driver::GetFirmwareVersionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetFirmwareVersionRequest> should match
// service_traits::DataType< ::kortex_driver::GetFirmwareVersion >
template<>
struct DataType< ::kortex_driver::GetFirmwareVersionRequest>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetFirmwareVersion >::value();
  }
  static const char* value(const ::kortex_driver::GetFirmwareVersionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kortex_driver::GetFirmwareVersionResponse> should match
// service_traits::MD5Sum< ::kortex_driver::GetFirmwareVersion >
template<>
struct MD5Sum< ::kortex_driver::GetFirmwareVersionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kortex_driver::GetFirmwareVersion >::value();
  }
  static const char* value(const ::kortex_driver::GetFirmwareVersionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kortex_driver::GetFirmwareVersionResponse> should match
// service_traits::DataType< ::kortex_driver::GetFirmwareVersion >
template<>
struct DataType< ::kortex_driver::GetFirmwareVersionResponse>
{
  static const char* value()
  {
    return DataType< ::kortex_driver::GetFirmwareVersion >::value();
  }
  static const char* value(const ::kortex_driver::GetFirmwareVersionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KORTEX_DRIVER_MESSAGE_GETFIRMWAREVERSION_H
